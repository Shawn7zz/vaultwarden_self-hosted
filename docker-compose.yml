version: '3'

services:
  vaultwarden:
    image: vaultwarden/server:latest
    container_name: vaultwarden
    restart: always
    environment:
      - WEBSOCKET_ENABLED=true
      - IP_HEADER=X-Forwarded-For
      - LOG_FILE=/data/vaultwarden.log
    volumes:
      - vaultwarden-data:/data

  caddy:
    image: caddy:latest
    container_name: caddy
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - ./caddy-config:/config
      - ./caddy-data:/data
    environment:
      - DOMAIN=
      - EMAIL=
      - LOG_FILE=/data/access.log
      - ACME_AGREE=true
  
  fail2ban:
    image: crazymax/fail2ban:latest
    container_name: fail2ban
    restart: always
    volumes:
      - ./fail2ban:/data
      - vaultwarden-data:/vaultwarden:ro
    network_mode: "host"
    privileged: true
    cap_add:
      - NET_ADMIN
      - NET_RAW
    environment:
      - F2B_DB_PURGE_AGE=30d
      - F2B_LOG_TARGET=/data/fail2ban.log
      - F2B_LOG_LEVEL=INFO
      - F2B_IPTABLES_CHAIN=INPUT
      - TZ=America/New_York

  countryblock:
    image: alpine:latest
    container_name: countryblock
    restart: always
    volumes:
      - ./countryblock/block.sh:/block.sh:ro
    network_mode: "host"
    privileged: true
    cap_add:
      - NET_ADMIN
      - NET_RAW
    environment:
      - COUNTRIES=CN HK AU
      - COUNTRYBLOCK_SCHEDULE=0 3 * * *
      - TZ=America/New_York
    command: >
      sh -c 'apk --update --no-cache add ipset iptables ip6tables wget bash tzdata &&
             ln -sf /proc/1/fd/1 /var/log/block.log &&
             sed -i "/bash \\/block\\.sh update/d" /etc/crontabs/root &&
             echo "$${COUNTRYBLOCK_SCHEDULE} bash /block.sh update" >> /etc/crontabs/root &&
             crond -d 8 &&
             bash /block.sh start'    

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: always
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    command: watchtower vaultwarden caddy vaultwarden-backup
    environment:
    - WATCHTOWER_CLEANUP=true
    - WATCHTOWER_SCHEDULE=10 6 * * *
    - WATCHTOWER_DEBUG=true
    - WATCHTOWER_NOTIFICATIONS=email
    - WATCHTOWER_NOTIFICATION_EMAIL_FROM=
    - WATCHTOWER_NOTIFICATION_EMAIL_TO=
    - WATCHTOWER_NOTIFICATION_EMAIL_SERVER=
    - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PORT=
    - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_USER=
    - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PASSWORD=
    - WATCHTOWER_NOTIFICATION_EMAIL_DELAY=10
    - TZ=


  backup:
    image: ttionya/vaultwarden-backup:latest
    container_name: vaultwarden-backup
    restart: always
    environment:
      - RCLONE_REMOTE_NAME=VaultwardenBackup
      - RCLONE_REMOTE_DIR=/VaultwardenBackup
      - CRON=10 5 * * *
      - ZIP_ENABLE=TRUE
      - ZIP_PASSWORD=
      - ZIP_TYPE=zip
      - BACKUP_KEEP_DAYS=30
      - PING_URL=
      - TIMEZONE=America/New_York
    volumes:
      - vaultwarden-data:/bitwarden/data/
      - vaultwarden-rclone-data:/config/

volumes:
  vaultwarden-data:
    name: vaultwarden-data
  vaultwarden-rclone-data:
    external: true
    name: vaultwarden-rclone-data
